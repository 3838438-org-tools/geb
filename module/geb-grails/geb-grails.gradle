import org.grails.gradle.plugin.GrailsTask

buildscript {
	repositories {
		mavenCentral()
		mavenRepo name: "grails", urls: 'http://repo.grails.org/grails/repo'
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:1.1-SNAPSHOT"
	}
}

apply plugin: "grails"

configurations {
	compile.exclude module: "commons-logging"
	compile.exclude module: 'xml-apis'
}

dependencies {
	compile "org.slf4j:slf4j-log4j12:1.5.5",
	        "org.grails:grails-crud:${grailsVersion}",
	        
	compile ("org.grails:grails-gorm:${grailsVersion}")

	runtime "hsqldb:hsqldb:1.8.0.5",
	        "net.sf.ehcache:ehcache-core:1.7.1"
	
	test project(':module:geb-junit4'),
	     project(':module:geb-spock'),
	     project(':module:geb-easyb'),
	     htmlUnitDriverDependency
}

System.setProperty("server.port", "8010")
System.setProperty("geb.building", "true") // disables geb deps in plugins build config

task createTemplatedFiles << {
	def templateVariables = [
		"grails-version": project.grailsVersion,
		"geb-version": project.version
	]
	
	projectDir.eachFileRecurse { inputFile ->
		if (!inputFile.name.endsWith(".in")) return
		
		def input = inputFile.getText("UTF-8")
		templateVariables.each { k, v ->
			input = input.replace("@$k@", v)
		}
		
		def destFile = new File(inputFile.parentFile, inputFile.name[0..-4])
		destFile.setText(input, "UTF-8")
	}
}

tasks.withType(GrailsTask) { task ->
	if (task.name != "clean") task.dependsOn(createTemplatedFiles)
}

task uploadPublished(type: GrailsTask) {
	if (project.hasProperty('codehausUsername') && project.hasProperty('codehausPassword')) {
		command "release-plugin"
		configuration "compile"
		useRuntimeClasspathForBootstrap true
		
		args = "-zipOnly -username=${codehausUsername} -password=${codehausPassword} "
		if (project.version.endsWith("-SNAPSHOT")) {
			args += "-message='snapshot release for “${project.version}”' -snapshot"
		} else {
			args += "-message='Release “${project.version}”'"
		}
	}
}

task build(dependsOn: [test, assemble])