buildscript {
	dependencies {
		classpath "markdown2book:markdown2book:1.0-SNAPSHOT"
	}
}

apply plugin: "base"
apply plugin: "maven"

archivesBaseName = "geb-manual"
output = file("build/manual")

def docTasks = []
rootProject.subprojects.findAll { project -> project.path in publishedModules && project.path in groovyModules }.each { project ->
	def taskName = "groovydoc-$project.name"
	task "$taskName" (type: Groovydoc) {
		source project.sourceSets.main.allGroovy
		destinationDir = file("build/manual-api/api/$project.name") 
		classpath = project.sourceSets.main.compileClasspath
		groovyClasspath = project.sourceSets.main.compileClasspath
		exclude "**/internal/**"
		
		link "http://download.oracle.com/javase/6/docs/api/",
			"java.net",
			"java.util",
			"java.lang",
			"java.io"
		
		link "http://selenium.googlecode.com/svn/trunk/docs/api/java/",
			"org.openqa.selenium"
		
		link "http://groovy.codehaus.org/api/",
			"groovy.lang"
		
		docTitle = "Groovy API Documentation for $project.name $project.version"
		footer = "<p style='text-align: center'>Groovy API Documentation for $project.name $project.version - Licensed under the Apache License, Version 2.0 - <a href='http://geb.codehaus.org'>http://geb.codehaus.org</a></p>"
		windowTitle = "Groovy API for $project.name $project.version"
	}
	docTasks << delegate."$taskName"
}

task compileApi(dependsOn: docTasks) {
	inputs.dir "build/manual-api"
	outputs.dir "build/manual-api"
}

task compileManual {
	inputs.dir "src"
	outputs.dir "build/manual-manual"
	
	doLast {
		new markdown2book.Generator(file("src"), file("build/manual-manual"), "UTF-8").generate()
	}
}
	
task compile(type: Sync, dependsOn: [compileManual, compileApi]) {
	from "build/manual-api"
	from "build/manual-manual"
	into output
	
	inputs.dir "build/manual-api"
	inputs.dir "build/manual-manual"
	outputs.dir output
}

task zip(type: Zip) {
	inputs.dir output
	outputs.file archivePath
	from output
}

configurations {
	archives
	meta
}

artifacts {
	archives zip
}

task install(type: Upload, dependsOn: buildArchives) {
	description = "Does a maven install of the archives artifacts into the local .m2 cache."
	configuration = configurations.archives
	repositories {
		mavenInstaller name: "mavenInstaller"
	}
}